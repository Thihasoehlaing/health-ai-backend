"""init schema

Revision ID: 323af881ad99
Revises: 
Create Date: 2025-08-11 07:10:27.598355

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '323af881ad99'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), server_default='STAFF', nullable=False),
    sa.Column('last_login_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("role IN ('SUPERADMIN','STAFF')", name='ck_admin_users_role'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_admin_users_created_at', 'admin_users', ['created_at'], unique=False)
    op.create_index(op.f('ix_admin_users_email'), 'admin_users', ['email'], unique=False)
    op.create_index('uq_admin_users_email_lower', 'admin_users', [sa.text('lower(email)')], unique=True)
    op.create_table('departments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('floor', sa.String(length=20), nullable=True),
    sa.Column('location_note', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('ix_departments_created_at', 'departments', ['created_at'], unique=False)
    op.create_index('ix_departments_is_active', 'departments', ['is_active'], unique=False)
    op.create_index('ix_departments_name', 'departments', ['name'], unique=False)
    op.create_table('faqs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('intent_key', sa.String(length=120), nullable=False),
    sa.Column('question', sa.String(length=255), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('intent_key')
    )
    op.create_index('ix_faqs_is_active', 'faqs', ['is_active'], unique=False)
    op.create_table('kiosk_devices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('location', sa.String(length=160), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('last_seen_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_kiosk_devices_created_at', 'kiosk_devices', ['created_at'], unique=False)
    op.create_index('ix_kiosk_devices_is_active', 'kiosk_devices', ['is_active'], unique=False)
    op.create_index('ix_kiosk_devices_last_seen_at', 'kiosk_devices', ['last_seen_at'], unique=False)
    op.create_index('ix_kiosk_devices_name', 'kiosk_devices', ['name'], unique=False)
    op.create_table('patients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('external_patient_id', sa.String(length=120), nullable=True),
    sa.Column('full_name', sa.String(length=160), nullable=False),
    sa.Column('dob', sa.DATE(), nullable=True),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('note', sa.String(length=500), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_patients_created_at', 'patients', ['created_at'], unique=False)
    op.create_index(op.f('ix_patients_external_patient_id'), 'patients', ['external_patient_id'], unique=True)
    op.create_index(op.f('ix_patients_full_name'), 'patients', ['full_name'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('actor_type', sa.String(length=16), nullable=False),
    sa.Column('actor_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=120), nullable=False),
    sa.Column('meta_json', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("actor_type IN ('ADMIN','SYSTEM')", name='ck_audit_logs_actor_type'),
    sa.ForeignKeyConstraint(['actor_id'], ['admin_users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_actor_id'), 'audit_logs', ['actor_id'], unique=False)
    op.create_index('ix_audit_logs_actor_type', 'audit_logs', ['actor_type'], unique=False)
    op.create_index('ix_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False)
    op.create_table('doctors',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('department_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('specialty', sa.String(length=120), nullable=True),
    sa.Column('room', sa.String(length=50), nullable=True),
    sa.Column('schedule_note', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_doctors_created_at', 'doctors', ['created_at'], unique=False)
    op.create_index(op.f('ix_doctors_department_id'), 'doctors', ['department_id'], unique=False)
    op.create_index('ix_doctors_dept_active_name', 'doctors', ['department_id', 'is_active', 'name'], unique=False)
    op.create_index(op.f('ix_doctors_name'), 'doctors', ['name'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('doctor_id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', name='appointment_status'), server_default='PENDING', nullable=False),
    sa.Column('created_by_admin_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('(end_time IS NULL) OR (end_time >= start_time)', name='ck_appointment_time_order'),
    sa.ForeignKeyConstraint(['created_by_admin_id'], ['admin_users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_appointments_doctor_id'), 'appointments', ['doctor_id'], unique=False)
    op.create_index(op.f('ix_appointments_patient_id'), 'appointments', ['patient_id'], unique=False)
    op.create_index(op.f('ix_appointments_status'), 'appointments', ['status'], unique=False)
    op.create_index('ix_appt_created_at', 'appointments', ['created_at'], unique=False)
    op.create_index('ix_appt_doctor_start_time', 'appointments', ['doctor_id', 'start_time'], unique=False)
    op.create_index('ix_appt_patient_start_time', 'appointments', ['patient_id', 'start_time'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_appt_patient_start_time', table_name='appointments')
    op.drop_index('ix_appt_doctor_start_time', table_name='appointments')
    op.drop_index('ix_appt_created_at', table_name='appointments')
    op.drop_index(op.f('ix_appointments_status'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_patient_id'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_doctor_id'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_doctors_name'), table_name='doctors')
    op.drop_index('ix_doctors_dept_active_name', table_name='doctors')
    op.drop_index(op.f('ix_doctors_department_id'), table_name='doctors')
    op.drop_index('ix_doctors_created_at', table_name='doctors')
    op.drop_table('doctors')
    op.drop_index('ix_audit_logs_created_at', table_name='audit_logs')
    op.drop_index('ix_audit_logs_actor_type', table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_actor_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_patients_full_name'), table_name='patients')
    op.drop_index(op.f('ix_patients_external_patient_id'), table_name='patients')
    op.drop_index('ix_patients_created_at', table_name='patients')
    op.drop_table('patients')
    op.drop_index('ix_kiosk_devices_name', table_name='kiosk_devices')
    op.drop_index('ix_kiosk_devices_last_seen_at', table_name='kiosk_devices')
    op.drop_index('ix_kiosk_devices_is_active', table_name='kiosk_devices')
    op.drop_index('ix_kiosk_devices_created_at', table_name='kiosk_devices')
    op.drop_table('kiosk_devices')
    op.drop_index('ix_faqs_is_active', table_name='faqs')
    op.drop_table('faqs')
    op.drop_index('ix_departments_name', table_name='departments')
    op.drop_index('ix_departments_is_active', table_name='departments')
    op.drop_index('ix_departments_created_at', table_name='departments')
    op.drop_table('departments')
    op.drop_index('uq_admin_users_email_lower', table_name='admin_users')
    op.drop_index(op.f('ix_admin_users_email'), table_name='admin_users')
    op.drop_index('ix_admin_users_created_at', table_name='admin_users')
    op.drop_table('admin_users')
    # ### end Alembic commands ###
